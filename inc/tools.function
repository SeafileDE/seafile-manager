#!/bin/bash
#
# Copyright 2015, Alexander Jackson <alexander.jackson@seafile.de>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Uncomment to run in verbose mode
#set -x


function backup-database {
# Test if SEAFILE_HOME_DIR exist and abort if not
if [[ -d "${SEAFILE_HOME_DIR}" ]] ;
then
  mkdir -p ${BACKUP_DIR}
  for i in ccnet-db seafile-db seahub-db; do mysqldump -h ${1} -u ${2} -p ${3} ${i} > ${BACKUP_DIR}/${i}.sql; done
else
cat <<EOF

  The configured local Seafile home directory ${SEAFILE_HOME_DIR}
  does not exist or simply is wrong for your installation.

  Set the correct path of variable \${SEAFILE_HOME_DIR} in
  ~/.seafile-manager-credentials and try again.

  Don\'t use this feature if you are running your Seafile server
  on a remote machine.

EOF
exit 1
fi
}


function check-library-integrity {
# Test if ${SEAFILE_HOME_DIR}/seafile-server-latest/seaf-fsck.sh exist and abort if not
if [[ -f "${SEAFILE_HOME_DIR}/seafile-server-latest/seaf-fsck.sh" ]] ;
then
  ${SEAFILE_HOME_DIR}/seafile-server-latest/seaf-fsck.sh
else
cat <<EOF

  The file ${SEAFILE_HOME_DIR}/seafile-server-latest/seaf-fsck.sh
  does not exist or simply is wrong for your installation.

  Set the correct path of variable \${SEAFILE_HOME_DIR} in
  ~/.seafile-manager-credentials and try again.

  Don\'t use this feature if you are running your Seafile server
  on a remote machine.

EOF
exit 1
fi
}


function repair-library-integrity {
# Test if ${SEAFILE_HOME_DIR}/seafile-server-latest/seaf-fsck.sh exist and abort if not
if [[ -f "${SEAFILE_HOME_DIR}/seafile-server-latest/seaf-fsck.sh" ]] ;
then
  ${SEAFILE_HOME_DIR}/seafile-server-latest/seaf-fsck.sh --repair
else
cat <<EOF

  The file ${SEAFILE_HOME_DIR}/seafile-server-latest/seaf-fsck.sh
  does not exist or simply is wrong for your installation.

  Set the correct path of variable \${SEAFILE_HOME_DIR} in
  ~/.seafile-manager-credentials and try again.

  Don\'t use this feature if you are running your Seafile server
  on a remote machine.

EOF
exit 1
fi
}


function enable-library-sync-after-repair {
# Test if ${SEAFILE_HOME_DIR}/seafile-server-latest/seaf-fsck.sh exist and abort if not
if [[ -f "${SEAFILE_HOME_DIR}/seafile-server-latest/seaf-fsck.sh" ]] ;
then
  ${SEAFILE_HOME_DIR}/seafile-server-latest/seaf-fsck.sh --enable-sync ${1}
else
cat <<EOF

  The file ${SEAFILE_HOME_DIR}/seafile-server-latest/seaf-fsck.sh
  does not exist or simply is wrong for your installation.

  Set the correct path of variable \${SEAFILE_HOME_DIR} in
  ~/.seafile-manager-credentials and try again.

  Don\'t use this feature if you are running your Seafile server
  on a remote machine.

EOF
exit 1
fi
}


function export-library-to-filesystem {
# Test if ${SEAFILE_HOME_DIR}/seafile-server-latest/seaf-fsck.sh exist and abort if not
if [[ -f "${SEAFILE_HOME_DIR}/seafile-server-latest/seaf-fsck.sh" ]] ;
then
  echo " Export of encrypted libraries is not supported. They will be skipped ..."
  ${SEAFILE_HOME_DIR}/seafile-server-latest/seaf-fsck.sh --export ${2} ${1}
else
cat <<EOF

  The file ${SEAFILE_HOME_DIR}/seafile-server-latest/seaf-fsck.sh
  does not exist or simply is wrong for your installation.

  Set the correct path of variable \${SEAFILE_HOME_DIR} in
  ~/.seafile-manager-credentials and try again.

  Don\'t use this feature if you are running your Seafile server
  on a remote machine.

EOF
exit 1
fi
}
